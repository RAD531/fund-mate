"""empty message

Revision ID: f8ef62ad5be1
Revises: 
Create Date: 2023-09-01 14:41:18.319199

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f8ef62ad5be1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Admin',
    sa.Column('AdminID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Password', sa.String(), nullable=True),
    sa.Column('FirstName', sa.String(length=50), nullable=True),
    sa.Column('LastName', sa.String(length=50), nullable=True),
    sa.Column('Username', sa.String(length=100), nullable=True),
    sa.Column('Email', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('AdminID'),
    sa.UniqueConstraint('Email'),
    sa.UniqueConstraint('Username')
    )
    op.create_table('City',
    sa.Column('CityID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CityName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('CityID')
    )
    op.create_table('Loan',
    sa.Column('LoanID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Amount', sa.Numeric(), nullable=True),
    sa.Column('CreatedAt', sa.DateTime(), nullable=True),
    sa.Column('UpdatedAt', sa.DateTime(), nullable=True),
    sa.Column('Interest', sa.Integer(), nullable=True),
    sa.Column('Negotiable', sa.Boolean(), nullable=True),
    sa.Column('Description', sa.String(length=200), nullable=True),
    sa.Column('DueDate', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('LoanID')
    )
    op.create_table('OfferStatus',
    sa.Column('OfferStatusID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('OfferStatusID'),
    sa.UniqueConstraint('Status')
    )
    op.create_table('PaymentFrequency',
    sa.Column('PaymentFrequencyID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Frequency', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('PaymentFrequencyID'),
    sa.UniqueConstraint('Frequency')
    )
    op.create_table('PaymentStatus',
    sa.Column('PaymentStatusID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('PaymentStatusID'),
    sa.UniqueConstraint('Status')
    )
    op.create_table('Region',
    sa.Column('RegionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('RegionName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('RegionID')
    )
    op.create_table('TransactionStatus',
    sa.Column('TransactionStatusID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('TransactionStatusID'),
    sa.UniqueConstraint('Status')
    )
    op.create_table('User',
    sa.Column('UserID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Password', sa.String(), nullable=True),
    sa.Column('FirstName', sa.String(length=50), nullable=True),
    sa.Column('LastName', sa.String(length=50), nullable=True),
    sa.Column('Username', sa.String(length=100), nullable=True),
    sa.Column('Email', sa.String(length=100), nullable=True),
    sa.Column('PhoneNumber', sa.String(), nullable=True),
    sa.Column('MobileNumber', sa.String(), nullable=True),
    sa.Column('Nationality', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('UserID'),
    sa.UniqueConstraint('Email'),
    sa.UniqueConstraint('Username')
    )
    op.create_table('Address',
    sa.Column('AddressID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Street', sa.String(), nullable=True),
    sa.Column('Apartment_Block', sa.String(), nullable=True),
    sa.Column('Commune', sa.String(), nullable=True),
    sa.Column('CityID', sa.Integer(), nullable=True),
    sa.Column('RegionID', sa.Integer(), nullable=True),
    sa.Column('Postcode', sa.String(), nullable=True),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CityID'], ['City.CityID'], ),
    sa.ForeignKeyConstraint(['RegionID'], ['Region.RegionID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('AddressID')
    )
    op.create_table('BankDetails',
    sa.Column('BankID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BankName', sa.String(), nullable=True),
    sa.Column('BankCardNumber', sa.String(length=16), nullable=True),
    sa.Column('BankAccountNumber', sa.String(length=8), nullable=True),
    sa.Column('BankSortCode', sa.String(length=6), nullable=True),
    sa.Column('BankIssueDate', sa.DateTime(), nullable=True),
    sa.Column('BankExpiryDate', sa.DateTime(), nullable=True),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('BankID')
    )
    op.create_table('Debtor',
    sa.Column('DebtorID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('DebtorID')
    )
    op.create_table('GoogleOAuth',
    sa.Column('GoogleID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('GoogleOAuthID', sa.String(), nullable=True),
    sa.Column('GoogleName', sa.String(), nullable=True),
    sa.Column('GoogleProfilePicture', sa.String(), nullable=True),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('GoogleID'),
    sa.UniqueConstraint('GoogleOAuthID')
    )
    op.create_table('Identity',
    sa.Column('IdentityID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('IdentityDocumentLink', sa.String(), nullable=True),
    sa.Column('IdentityFileName', sa.String(length=50), nullable=True),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('IdentityID')
    )
    op.create_table('Lender',
    sa.Column('LenderID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('LenderID')
    )
    op.create_table('LoanConditions',
    sa.Column('LoanConditionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('LoanID', sa.Integer(), nullable=True),
    sa.Column('LoanConditionDescription', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['LoanID'], ['Loan.LoanID'], ),
    sa.PrimaryKeyConstraint('LoanConditionID')
    )
    op.create_table('LenderToLoan',
    sa.Column('LenderToLoanID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('LenderID', sa.Integer(), nullable=True),
    sa.Column('LoanID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['LenderID'], ['Lender.LenderID'], ),
    sa.ForeignKeyConstraint(['LoanID'], ['Loan.LoanID'], ),
    sa.PrimaryKeyConstraint('LenderToLoanID')
    )
    op.create_table('LoanOffer',
    sa.Column('LoanOfferID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('LoanID', sa.Integer(), nullable=True),
    sa.Column('LenderID', sa.Integer(), nullable=True),
    sa.Column('DebtorID', sa.Integer(), nullable=True),
    sa.Column('OfferCreatedAt', sa.DateTime(), nullable=True),
    sa.Column('OfferUpdatedAt', sa.DateTime(), nullable=True),
    sa.Column('Interest', sa.Integer(), nullable=True),
    sa.Column('DueDate', sa.DateTime(), nullable=True),
    sa.Column('PaymentFrequency', sa.Integer(), nullable=True),
    sa.Column('OfferStatus', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['DebtorID'], ['Debtor.DebtorID'], ),
    sa.ForeignKeyConstraint(['LenderID'], ['Lender.LenderID'], ),
    sa.ForeignKeyConstraint(['LoanID'], ['Loan.LoanID'], ),
    sa.ForeignKeyConstraint(['OfferStatus'], ['OfferStatus.OfferStatusID'], ),
    sa.ForeignKeyConstraint(['PaymentFrequency'], ['PaymentFrequency.PaymentFrequencyID'], ),
    sa.PrimaryKeyConstraint('LoanOfferID')
    )
    op.create_table('Transaction',
    sa.Column('TransactionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('LoanID', sa.Integer(), nullable=True),
    sa.Column('LenderID', sa.Integer(), nullable=True),
    sa.Column('DebtorID', sa.Integer(), nullable=True),
    sa.Column('TransactionCreatedAt', sa.DateTime(), nullable=True),
    sa.Column('TransactionUpdatedAt', sa.DateTime(), nullable=True),
    sa.Column('OriginalAmount', sa.Numeric(), nullable=True),
    sa.Column('AmountDue', sa.Numeric(), nullable=True),
    sa.Column('Interest', sa.Integer(), nullable=True),
    sa.Column('DueDate', sa.DateTime(), nullable=True),
    sa.Column('PaymentFrequency', sa.Integer(), nullable=True),
    sa.Column('TransactionStatus', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['DebtorID'], ['Debtor.DebtorID'], ),
    sa.ForeignKeyConstraint(['LenderID'], ['Lender.LenderID'], ),
    sa.ForeignKeyConstraint(['LoanID'], ['Loan.LoanID'], ),
    sa.ForeignKeyConstraint(['PaymentFrequency'], ['PaymentFrequency.PaymentFrequencyID'], ),
    sa.ForeignKeyConstraint(['TransactionStatus'], ['TransactionStatus.TransactionStatusID'], ),
    sa.PrimaryKeyConstraint('TransactionID')
    )
    op.create_table('Contract',
    sa.Column('ContractID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('TransactionID', sa.Integer(), nullable=True),
    sa.Column('ContractDocumentLink', sa.String(), nullable=True),
    sa.Column('ContractFileName', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['TransactionID'], ['Transaction.TransactionID'], ),
    sa.PrimaryKeyConstraint('ContractID')
    )
    op.create_table('TransactionPayment',
    sa.Column('TransactionPaymentID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('TransactionID', sa.Integer(), nullable=True),
    sa.Column('AmountPaid', sa.Numeric(), nullable=True),
    sa.Column('DatePaid', sa.DateTime(), nullable=True),
    sa.Column('PaymentStatus', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['PaymentStatus'], ['PaymentStatus.PaymentStatusID'], ),
    sa.ForeignKeyConstraint(['TransactionID'], ['Transaction.TransactionID'], ),
    sa.PrimaryKeyConstraint('TransactionPaymentID')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('TransactionPayment')
    op.drop_table('Contract')
    op.drop_table('Transaction')
    op.drop_table('LoanOffer')
    op.drop_table('LenderToLoan')
    op.drop_table('LoanConditions')
    op.drop_table('Lender')
    op.drop_table('Identity')
    op.drop_table('GoogleOAuth')
    op.drop_table('Debtor')
    op.drop_table('BankDetails')
    op.drop_table('Address')
    op.drop_table('User')
    op.drop_table('TransactionStatus')
    op.drop_table('Region')
    op.drop_table('PaymentStatus')
    op.drop_table('PaymentFrequency')
    op.drop_table('OfferStatus')
    op.drop_table('Loan')
    op.drop_table('City')
    op.drop_table('Admin')
    # ### end Alembic commands ###
